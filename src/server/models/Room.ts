import RoomDataHandler from "../handlers/RoomHandler";

import type SessionModel from "./Session";
import type IDataHandler from "../types/handler";


/**
 * A model representing a room in the game.
 */
export default class RoomModel {
    
  constructor(
    public readonly roomID: string, // Should be generated by RoomManager
    public sessions: SessionModel[] = [],
    public roomDataHandler: IDataHandler = new RoomDataHandler()
  ) {}

  /**
   * Assigns a new session to the room.
   * @param session The session to add to the room.
   */
  public addSession(session: SessionModel): void {
    this.sessions.push(session);
    session.room = this; // Set the room for the session
  }

  /**
   * Removes a session from the room.
   * @param session The session to remove from the room.
   */
  public removeSession(session: SessionModel): void {
    const index = this.sessions.indexOf(session);
    if (index !== -1) {
      this.sessions.splice(index, 1);
      session.room = null; // Clear the room for the session
    }
  }

}